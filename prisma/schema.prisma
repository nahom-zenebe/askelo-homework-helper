generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  image         String?  
  createdAt     DateTime  @default(now())
  homeworkTasks HomeworkTask[]
  Verification  Verification?
  threads       Thread[]  @relation("UserThreads")
  message       Message[]

}
model Verification {
  id         String   @id @default(cuid())
  userId     String   @unique  // Add @unique here
  type       String
  token      String
  expiresAt  DateTime
  createdAt  DateTime @default(now())

  user       user     @relation(fields: [userId], references: [id])

  @@index([token])
  @@index([expiresAt])
}
model HomeworkTask {
  id             String    @id @default(cuid())
  extractedText  String?
  explanation    String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime? @updatedAt
  aiUsedAt       DateTime?

  userId         String
  user           user      @relation(fields: [userId], references: [id])

  thread         Thread?   @relation("TaskThread", fields: [threadId], references: [id])
  threadId       String?   @unique
}

model Thread {
  id          String      @id @default(cuid())
  title       String
  content     String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime?   @updatedAt

  authorId    String
  author      user        @relation("UserThreads", fields: [authorId], references: [id])

  task        HomeworkTask? @relation("TaskThread")
  messages    Message[]

}

model Message {
  id        String   @id @default(cuid())
  content   String
  createdAt DateTime @default(now())

  threadId  String
  thread    Thread   @relation(fields: [threadId], references: [id])

  userId    String
  user      user     @relation(fields: [userId], references: [id])
}
